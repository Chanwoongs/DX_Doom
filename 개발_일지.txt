Collision Idea
총알은 Sphere
Navmesh 

처리할 충돌
총알, 적 / Sphere와 BoundingBox
Navmesh Node / Polygon Spherer

BoundingBox class
position
박스생성
충돌 검사

Nav A*

네비메쉬 클래스에서 노드들을 싹다 깔아놓고 노드들에 대한 충돌검사까지 다하고
방해물 있고 없고 값들을 0,1 로 싹다 넘겨주고 
A* 클래스에서 경로 찾기 실행
시도 1, 노드 삼각뿔 렌더링시 FPS 20까지 떨어짐
시도 2, 노드 삼각형 렌더링시 FPS 29까지 떨어짐, Texture Update시 1FPS
시도 3, 노드 직선 렌더링시 FPS 28, Texture Update시 1FPS
시도 4, 노드 수직한 벡터만 사용 (렌더링은 불가) 삼각형 충돌 테스트 실행 조차 안됨
시도 5, 네비메쉬를 모델이 아닌 Text File을 사용하여 갈 수 있는 곳과 없는 곳을 나눔 -> 최적의 길은 찾았다 하지만 길을 찾는 순간 프레임이 확 저하됨, DeltaTime을 이용하여 Update를 띄엄띄엄 하려했지만 찾는 순간에는 역시 프레임 저하가 일어남.
시도 5(문제 원인 및 해결) 
원인 파악 중 A*의 시간 복잡도는 Heuristic 함수에 따라 결정된다는 논문을 발견하여, Hueristic 함수를 다시 체크함. 
Hueristic 함수에 f(h)를 endpoint와 endpoint의 거리로 잘못 설정하였음. 다시 f(h)를 endpoint - point의 거리로 변경 하니 프레임 저하 일어나지 않음.
경로를 찾지 못할 시에 프레임이 1로 확 떨어지는 현상 발생 -> 지정된 범위 밖으로 player가 벗어나지 못하도록 설정 -> Bounding Box
길찾는 오버헤드가 크므로 노드 갯수를 1/4로 줄임


총알
메모리 풀 사용하여 메모리 단편화 방지
빈칸 리스트 기법을 사용하여 연결 리스트를 만들고 객체를 생성할 때 사용중이지 않은 객체를 검색할 필요없이 연결 리스트의 head에서 꺼내올 수있고, 다 사용한 객체는 다시 연결리스트로 돌려준다.

벽 뚫 처리
카메라의 네 방향으로 Ray를 쏘고 벽과 충돌하는지 체크한뒤 거리가 가깝다면 그쪽으로 못움직이도록 처리